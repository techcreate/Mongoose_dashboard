var mongoose = require('mongoose');
//Create your Mongoose Schemas
var OtterSchema = new mongoose.Schema({
	name: {type: String},
	age: {type: Number},
	home: {type: String}
}, {timestamps: true})
//Store the Schema under the name 'Otter'
mongoose.model('Otter', OtterSchema);
//Retrieve the Schema called 'Otter' and store it to the variable Otter
var Otter = mongoose.model('Otter');
//Make sure Otter and Otter match
//Connect Mongoose to MongoDB
mongoose.connect('mongodb://localhost/basic_mongoose');

var db = mongoose.connection;
db.on('error', console.error.bind(console, 'connection error:'));
db.once('open', function(){
	console.log('We are connected!')
})
// Require the Express Module
var express = require('express');
// Create an Express App
var app = express();
// Require body-parser (to receive post data from clients)
var bodyParser = require('body-parser');
// Integrate body-parser with our App
app.use(bodyParser.urlencoded({ extended: true }));
// Require path
var path = require('path');
// Setting our Static Folder Directory
app.use(express.static(path.join(__dirname, './static')));
// Setting our Views Folder Directory
app.set('views', path.join(__dirname, './views'));
// Setting our View Engine set to EJS
app.set('view engine', 'ejs');
// Routes
// Root Request
app.get('/', function(req, res) {
    // This is where we will retrieve the users from the database and include them in the view page we will be rendering.
    Otter.find({},function(err, otters){
    	if (err){
    		console.log("Otters error", err);
    		res.send({message: "typing error"});
    	} else {
    		res.render("index", {otters:otters});
    	}
    })
})

app.get('/otter/:id', function(req, res){
	Otter.findOne({_id: req.params.id}, function(err, otter){
		if (err){
			console.log("Otters/:id error", err);
			res.send({message: "there was an error"});
		} else {
			console.log('otter',otter);
			res.render("show", {otter:otter});
		}

	})
})

app.get('/otter/:id/edit', function(req, res){
	Otter.findOne({_id: req.params.id}, function(err, otter){
		if (err){
			console.log("Otter error", err);
			res.send({message: "error in edit"});
		} else {
			console.log('otter', otter);
			res.render("edit", {otter:otter});
		}
	})
})

app.post('/otters/destroy', function(req, res){
	Otter.remove({_id:req.body.id}, function(err){
		res.redirect('/');
	
})
})
app.post('/otters/edit_process', function(req, res){
	// var id = req.params.id;
	// var data ={
	// 	name: req.body.name,
	// 	age: req.body.age,
	// 	home: req.body.home
	// };
	Otter.findOne({_id:req.body.id}, function(err, otter){
			otter.name = req.body.name;
			otter.age = req.body.age;
			otter.home = req.body.home;
			otter.save(function(err){
				res.redirect("/");
			})
	})
})
// Add User Request 
app.post('/otters', function(req, res) {
    console.log("POST DATA", req.body);
    var otter = new Otter({name: req.body.name, age: req.body.age, home: req.body.home});
    otter.save(function(err){
    	if (err){
    		console.log('something went wrong');
    	} else {
    		console.log('successfully added a otter!');
    		res.redirect('/');
    	}
    })
    // This is where we would add the user from req.body to the database.
})
// Setting our Server to Listen on Port: 8000
app.listen(8000, function() {
    console.log("listening on port 8000");
});
